@import "_variables.scss";

@function percent-to-integer($percent, $baseValue) {
    @return round(($percent / 100) * $baseValue);
}

html {
    background-image: url(https://w.wallhaven.cc/full/wy/wallhaven-wyp7ep.jpg);
    overflow: hidden;
}

#particles-js {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Ensure it's behind other content */
}

.mainWindow {
    position: absolute;
    @if $uniMargin != 0% {
        width: calc((100% - (2 * $uniMargin)));
        height: calc(100% - $uniMargin - $waybarHeight);
        bottom: calc(2 * ($uniMargin));
        left: $uniMargin;
    } @else {
        width: calc((100% - (2 * $sideMargin)));
        height: calc(100% - $bottomMargin - $waybarHeight);
        bottom: calc(2 * ($bottomMargin));
        left: $sideMargin;
    }
    border: $borderThickness solid $borderCol;
    border-radius: $bevelRad;
    box-shadow: $shadowRad $shadowCol;
    background-color: $windowCol;
    backdrop-filter:
        blur($windowBlur)
        brightness($windowBrightness)
        contrast($windowContrast);
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    transform: translate(0, 0);
    transition: background-color $transitionSpeed ease, width $transitionSpeed ease, height $transitionSpeed ease, left $transitionSpeed ease, bottom $transitionSpeed ease, transform $transitionSpeed ease;
}

.mainWindow:hover {
    @if $uniMargin != 0% {
        width: calc((((100% - (2 * $uniMargin))) * $hoverCoefficient) + $hoverConst);
        height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst);
        left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
        bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
    } @else {
        width: calc((((100% - (2 * $sideMargin))) * $hoverCoefficient) + $hoverConst);
        height: calc(((100% - $bottomMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst);
        left: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
        bottom: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
    }
    box-shadow: $shadowRad $shadowCol;
    background-color: $hoverWindowCol;
    border: $hoverBorderThickness solid $hoverBorderCol;
    backdrop-filter:
        blur($hoverWindowBlur)
        brightness($hoverWindowBrightness)
        contrast($hoverWindowContrast);
}

.waybar {
    position: absolute;
    @if $uniMargin != 0% {
        width: calc((100% - (2 * $uniMargin)) - ($waybarHeight / 1%) * 1vh);
        height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin));
        top: calc(2 * ($uniMargin));
        right: $uniMargin;
    } @else {
        width: calc((100% - (2 * $sideMargin)) - ($waybarHeight / 1%) * 1vh);
        height: calc((($waybarHeight) - (2.25 * (2 * $bottomMargin))));
        top: calc(2 * ($bottomMargin));
        right: $sideMargin;
    }
    border: $borderThickness solid $borderCol;
    border-radius: $bevelRad;
    box-shadow: $shadowRad $shadowCol;
    background-color: $windowCol;
    backdrop-filter:
        blur($windowBlur)
        brightness($windowBrightness)
        contrast($windowContrast);
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    transform: translate(0, 0);
    transition: background-color $transitionSpeed ease, width $transitionSpeed ease, height $transitionSpeed ease, right $transitionSpeed ease, bottom $transitionSpeed ease, transform $transitionSpeed ease;
}

.waybar:hover {
    @if $uniMargin != 0% {
        width: calc(((((100% - (2 * $uniMargin)) - (($waybarHeight / 1%) * 1vh)) * $hoverCoefficient) + $hoverConst));
        height: calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + $hoverConst);
        right: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 4));
        top: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
    } @else {
        width: calc((((100% - (2 * $sideMargin)) * $hoverCoefficient) + $hoverConst) - ($waybarHeight / 1%) * 1vh);
        height: calc((((($waybarHeight) - (2.25 * (2 * $bottomMargin)))) * $hoverCoefficient) + $hoverConst);
        right: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
        top: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
    }
    box-shadow: $shadowRad $shadowCol;
    background-color: $hoverWindowCol;
    border: $hoverBorderThickness solid $hoverBorderCol;
    backdrop-filter:
        blur($hoverWindowBlur)
        brightness($hoverWindowBrightness)
        contrast($hoverWindowContrast);
}

.iframeWindow {
    position: absolute;
    @if $uniMargin != 0% {
        width: calc((100% - (2 * $uniMargin)));
        height: calc(100% - $uniMargin - $waybarHeight);
        bottom: calc(2 * ($uniMargin));
        left: $uniMargin;
    } @else {
        width: calc((100% - (2 * $sideMargin)));
        height: calc(100% - $bottomMargin - $waybarHeight);
        bottom: calc(2 * ($bottomMargin));
        left: $sideMargin;
    }
    border: $borderThickness solid $borderCol;
    border-radius: $bevelRad;
    box-shadow: $shadowRad $shadowCol;
    background-color: $windowCol;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    transform: translate(0, 0);
    transition: background-color $transitionSpeed ease, width $transitionSpeed ease, height $transitionSpeed ease, left $transitionSpeed ease, bottom $transitionSpeed ease, transform $transitionSpeed ease;
}

.iframeWindow:hover {
    @if $uniMargin != 0% {
        width: calc((((100% - (2 * $uniMargin))) * $hoverCoefficient) + $hoverConst);
        height: calc(((100% - $uniMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst);
        left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
        bottom: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
    } @else {
        width: calc((((100% - (2 * $sideMargin))) * $hoverCoefficient) + $hoverConst);
        height: calc(((100% - $bottomMargin - $waybarHeight) * $hoverCoefficient) + $hoverConst);
        left: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
        bottom: calc(2 * $bottomMargin - (((100% - $sideMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - ($hoverConst / 2));
    }
    box-shadow: $shadowRad $shadowCol;
    background-color: $hoverWindowCol;
    border: $hoverBorderThickness solid $hoverBorderCol;
}

.menu {
    fill: $menuButtonCol;
    stroke: $menuButtonCol;
    position: absolute;
    @if $uniMargin != 0% {
        width: calc(($waybarHeight / 1%) * 1vh - $uniMargin);
        height: calc(($waybarHeight) - 2.25 * (2 * $uniMargin));
        top: calc(2 * ($uniMargin));
        left: $uniMargin;
    } @else {
        width: calc(($waybarHeight / 1%) * 1vh - $sideMargin);
        height: calc((($waybarHeight) - (2.25 * (2 * $bottomMargin))));
        top: calc(2 * ($bottomMargin));
        left: $sideMargin;
    }
    border: $borderThickness solid $borderCol;
    border-radius: $bevelRad;
    box-shadow: $shadowRad $shadowCol;
    background-color: $windowCol;
    backdrop-filter:
        blur($windowBlur)
        brightness($windowBrightness)
        contrast($windowContrast);
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    transform: translate(0, 0);
    transition: background-color $transitionSpeed ease, width $transitionSpeed ease, height $transitionSpeed ease, left $transitionSpeed ease, bottom $transitionSpeed ease, transform $transitionSpeed ease;
}

.menu:hover {
    @if $uniMargin != 0% {
        width: calc((((($waybarHeight / 1%) * 1vh - $uniMargin) * $hoverCoefficient) + ($hoverConst * ($uniMargin / 1%))));
        height: calc(((($waybarHeight) - 2.25 * (2 * $uniMargin)) * $hoverCoefficient) + ($hoverConst * ($uniMargin / 1%)));
        left: calc($uniMargin - (((100% - (2 * $uniMargin)) * ($hoverCoefficient - 1)) / 2) - (($hoverConst * ($uniMargin / 1%)) / 2));
        top: calc(2 * $uniMargin - (((100% - $uniMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - (($hoverConst * ($uniMargin / 1%)) / 2));
    } @else {
        width: calc((((($waybarHeight / 1%) * 1vh - $sideMargin) * $hoverCoefficient) + ($hoverConst * ($sideMargin / 1%))));
        height: calc(((($waybarHeight) - 2.25 * (2 * $bottomMargin)) * $hoverCoefficient) + ($hoverConst * ($bottomMargin / 1%)));
        left: calc($sideMargin - (((100% - (2 * $sideMargin)) * ($hoverCoefficient - 1)) / 2) - (($hoverConst * ($sideMargin / 1%)) / 2));
        top: calc(2 * $bottomMargin - (((100% - $bottomMargin - $waybarHeight) * ($hoverCoefficient - 1)) / 2) - (($hoverConst * ($bottomMargin / 1%)) / 2));
    }
    box-shadow: $shadowRad $shadowCol;
    background-color: $hoverWindowCol;
    border: $hoverBorderThickness solid $hoverBorderCol;
    backdrop-filter:
        blur($hoverWindowBlur)
        brightness($hoverWindowBrightness)
        contrast($hoverWindowContrast);
}


// in the future make it so when you hover over a window, its boarder changes color to become brighter, and it becomes slightly bigger by like 5-20% ish
// ($hoverConst * ($uniMargin / 1%))